-- openBanking-back 코드와 호환되는 테이블 생성 스크립트
-- 모든 테이블명은 OPENBANKING_ 접두사 사용

-- 오픈뱅킹 사용자 테이블 (auth_user 매핑)
CREATE TABLE OPENBANKING_USER (
    USER_SEQ_NO       VARCHAR2(50 CHAR)    PRIMARY KEY,
    USER_CI           VARCHAR2(255 CHAR)   NOT NULL,
    USER_NAME         VARCHAR2(255 CHAR)   NOT NULL,
    CREATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP,
    UPDATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP
);

-- 오픈뱅킹 클라이언트 테이블 (auth_client 매핑)
CREATE TABLE OPENBANKING_CLIENT (
    CLIENT_ID         VARCHAR2(255 CHAR)   PRIMARY KEY,
    CLIENT_SECRET     VARCHAR2(255 CHAR)   NOT NULL,
    GRANT_TYPE        VARCHAR2(255 CHAR)   NULL,
    CLIENT_USE_CODE   VARCHAR2(256 CHAR)   NOT NULL,
    CREATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP,
    UPDATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP
);

-- 오픈뱅킹 은행 코드 테이블 (auth_bank_code 매핑)
CREATE TABLE OPENBANKING_BANK_CODE (
    BANK_CODE_STD     VARCHAR2(3 CHAR)     PRIMARY KEY,
    BANK_NAME         VARCHAR2(50 CHAR)    NULL,
    BANK_TYPE         VARCHAR2(10 CHAR)    NULL,
    CREATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP,
    UPDATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP
);

-- 오픈뱅킹 계좌 테이블 (auth_account 매핑)
CREATE TABLE OPENBANKING_ACCOUNT (
    FINTECH_USE_NUM   VARCHAR2(50 CHAR)    PRIMARY KEY,
    USER_SEQ_NO       VARCHAR2(50 CHAR)    NOT NULL,
    BANK_CODE_STD     VARCHAR2(3 CHAR)     NOT NULL,
    ACCOUNT_NUM       VARCHAR2(50 CHAR)    NOT NULL,
    ACCOUNT_ALIAS     VARCHAR2(255 CHAR)   NULL,
    CREATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP,
    UPDATED_AT        TIMESTAMP(6)         DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (USER_SEQ_NO) REFERENCES OPENBANKING_USER(USER_SEQ_NO),
    FOREIGN KEY (BANK_CODE_STD) REFERENCES OPENBANKING_BANK_CODE(BANK_CODE_STD)
);

-- 오픈뱅킹 거래 로그 테이블 (auth_transaction_log 매핑)
CREATE TABLE OPENBANKING_TRANSACTION_LOG (
    API_TRAN_ID                 NUMBER(19,0)         PRIMARY KEY,
    FINTECH_USE_NUM             VARCHAR2(50 CHAR)    NULL,
    TRAN_AMT                    NUMBER(15,2)         NULL,
    WD_BANK_CODE_STD            VARCHAR2(3 CHAR)     NULL,
    WD_ACCOUNT_NUM_MASKED       VARCHAR2(50 CHAR)    NULL,
    WD_PRINT_CONTENT            VARCHAR2(100 CHAR)   NULL,
    REQ_CLIENT_NAME             VARCHAR2(50 CHAR)    NULL,
    REQ_CLIENT_FINTECH_USE_NUM  VARCHAR2(50 CHAR)    NULL,
    REQ_CLIENT_NUM              VARCHAR2(50 CHAR)    NULL,
    TRANSFER_PURPOSE            VARCHAR2(2 CHAR)     NULL,
    API_TYPE                    VARCHAR2(20 CHAR)    NULL,
    RESPONSE_CODE               VARCHAR2(10 CHAR)    NULL,
    RESPONSE_MESSAGE            VARCHAR2(200 CHAR)   NULL,
    BANK_TRAN_ID                VARCHAR2(50 CHAR)    NULL,
    BANK_TRAN_DATE              VARCHAR2(8 CHAR)     NULL,
    BANK_CODE_TRAN              VARCHAR2(3 CHAR)     NULL,
    BANK_RSP_CODE               VARCHAR2(4 CHAR)     NULL,
    BANK_RSP_MESSAGE            VARCHAR2(200 CHAR)   NULL,
    FINTECH_GROUP_NO            VARCHAR2(5 CHAR)     NULL,
    CMS_NO                      VARCHAR2(15 CHAR)    NULL,
    SAVINGS_BANK_NAME           VARCHAR2(50 CHAR)    NULL,
    REQ_CNT                     VARCHAR2(10 CHAR)    NULL,
    CREATED_AT                  TIMESTAMP(6)         DEFAULT SYSTIMESTAMP
);

-- 시퀀스 생성
CREATE SEQUENCE TRANSACTION_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE;

-- 트리거 생성 (UPDATE 시 UPDATED_AT 자동 갱신)
CREATE OR REPLACE TRIGGER TRG_OPENBANKING_USER
BEFORE INSERT OR UPDATE ON OPENBANKING_USER
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        :NEW.UPDATED_AT := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_OPENBANKING_CLIENT
BEFORE INSERT OR UPDATE ON OPENBANKING_CLIENT
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        :NEW.UPDATED_AT := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_OPENBANKING_BANK_CODE
BEFORE INSERT OR UPDATE ON OPENBANKING_BANK_CODE
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        :NEW.UPDATED_AT := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_OPENBANKING_ACCOUNT
BEFORE INSERT OR UPDATE ON OPENBANKING_ACCOUNT
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        :NEW.UPDATED_AT := SYSTIMESTAMP;
    END IF;
END;
/

-- 인덱스 생성
CREATE INDEX IDX_OPENBANKING_USER_CI ON OPENBANKING_USER(USER_CI);
CREATE INDEX IDX_OPENBANKING_ACCOUNT_USER_SEQ_NO ON OPENBANKING_ACCOUNT(USER_SEQ_NO);
CREATE INDEX IDX_OPENBANKING_ACCOUNT_BANK_CODE ON OPENBANKING_ACCOUNT(BANK_CODE_STD);
CREATE INDEX IDX_OPENBANKING_ACCOUNT_ACCOUNT_NUM ON OPENBANKING_ACCOUNT(ACCOUNT_NUM);
CREATE INDEX IDX_OPENBANKING_TRANSACTION_LOG_FINTECH ON OPENBANKING_TRANSACTION_LOG(FINTECH_USE_NUM);
CREATE INDEX IDX_OPENBANKING_TRANSACTION_LOG_TRAN_DATE ON OPENBANKING_TRANSACTION_LOG(BANK_TRAN_DATE);